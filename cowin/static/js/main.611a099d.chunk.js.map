{"version":3,"sources":["client.js","App.js","index.js"],"names":["axiosInstance","require","create","baseURL","module","exports","Login","React","useState","states","setStates","districts","setDistricts","centers","setCenters","state","setState","district","setDistrict","pincode","setPincode","searchBy","setSearchBy","moment","format","date","setDate","result","setResult","a","client","get","res","console","log","data","findAppointments","selecteddate","url","error","handleDateChange","action","updateddate","add","handleSearchByChange","e","target","checked","value","preventDefault","useEffect","getStates","getDistricts","className","href","onSubmit","style","marginTop","class","type","onChange","marginLeft","Fragment","for","map","state_id","state_name","district_id","district_name","onClick","Array","i","days","center","id","center_id","width","name","fee_type","address","block_name","obj","_","findWhere","sessions","available_capacity","colorName","min_age_limit","vaccine","color","length","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.611a099d.chunk.js","sourcesContent":["var axios = require(\"axios\");\n\nvar axiosInstance = axios.create({\n  baseURL: \"https://cdn-api.co-vin.in/api/v2\"\n  /* other custom settings */\n});\n\nmodule.exports = axiosInstance;\n","import React from \"react\";\nimport client from \"./client\";\nimport moment from \"moment\";\nimport _ from \"underscore\";\nexport default function Login() {\n  const [states, setStates] = React.useState([]);\n\n  const [districts, setDistricts] = React.useState([]);\n  const [centers, setCenters] = React.useState([]);\n\n  const [state, setState] = React.useState(\"\");\n  const [district, setDistrict] = React.useState(\"\");\n  const [pincode, setPincode] = React.useState(\"\");\n  const [searchBy, setSearchBy] = React.useState(\"pincode\");\n  const [date, setDate] = React.useState(moment().format(\"YYYY-MM-DD\"));\n  const [result, setResult] = React.useState(false);\n  async function getStates() {\n    try {\n      let res = await client.get(\"/admin/location/states\");\n      console.log(\"res\", res);\n      setStates(res.data.states || []);\n    } catch (e) {}\n  }\n  async function getDistricts() {\n    try {\n      let res = await client.get(`/admin/location/districts/${state}`);\n      console.log(\"res\", res);\n      setDistricts(res.data.districts || []);\n    } catch (e) {}\n  }\n  async function findAppointments() {\n    try {\n      setResult(false);\n      let selecteddate = moment(date).format(\"DD-MM-YYYY\");\n      let url =\n        searchBy === \"district\"\n          ? `/appointment/sessions/public/calendarByDistrict?district_id=${district}&date=${selecteddate}`\n          : `/appointment/sessions/public/calendarByPin?pincode=${pincode}&date=${selecteddate}`;\n\n      console.log(\"url\", url);\n      let res = await client.get(url);\n      console.log(\"res\", res);\n      setResult(true);\n      setCenters(res.data.centers || []);\n    } catch (e) {\n      console.error(e)\n      setResult(false);\n    }\n  }\n  function handleDateChange(action) {\n    let updateddate = moment(date);\n    if (action === \"next\") {\n      updateddate = updateddate.add(7, \"days\");\n    } else {\n      updateddate = updateddate.add(-7, \"days\");\n    }\n    setDate(updateddate.format(\"YYYY-MM-DD\"));\n  }\n  function handleSearchByChange(e){\n    if(e.target.checked){\n      setSearchBy(e.target.value);\n    }\n    \n  }\n  React.useEffect(() => {\n    getStates();\n  }, []);\n  React.useEffect(() => {\n    getDistricts();\n  }, [state]);\n  React.useEffect(() => {\n    findAppointments();\n  }, [date]);\n  function addDay(days) {\n    return moment(date).add(days, \"days\").format(\"DD MMM YYYY\");\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    findAppointments();\n    // handleCallback(username, password);\n  }\n  return (\n    <div className=\"\">\n      <div className=\"row\">\n        <div className=\"col-sm-6 col-xs-12 col-sm-offset-3\">\n          <h3>COWIN - Check your nearest vaccination center</h3>\n          <label>Developed By: Sunil More</label>{\" \"}\n          <a\n            href=\"https://github.com/sunilmore690/cowin-vaccine\"\n            target=\"_blank\"\n          >\n            Repo\n          </a>\n          <form onSubmit={handleSubmit} style={{ marginTop: \"20px\" }}>\n            <div class=\"form-group\">\n              <input\n                type=\"radio\"\n                value=\"pincode\"\n                checked={searchBy === \"pincode\"}\n                onChange={handleSearchByChange}\n              />{\" \"}\n              Search By Pincode\n              <input\n                type=\"radio\"\n                value=\"district\"\n                style={{ marginLeft: \"10px\" }}\n                checked={searchBy === \"district\"}\n                onChange={handleSearchByChange}\n              />{\" \"}\n              Search By District\n            </div>\n            {searchBy === \"district\" ? (\n              <React.Fragment>\n                <div class=\"form-group\">\n                  <label for=\"email\">State</label>\n                  <select\n                    type=\"text\"\n                    class=\"form-control\"\n                    value={state}\n                    onChange={(e) => setState(e.target.value)}\n                  >\n                    <option value=\"\">--Select State--</option>\n                    {states.map((state) => (\n                      <option value={state.state_id}>{state.state_name}</option>\n                    ))}\n                  </select>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"email\">District</label>\n                  <select\n                    type=\"text\"\n                    class=\"form-control\"\n                    value={district}\n                    onChange={(e) => setDistrict(e.target.value)}\n                  >\n                    <option value=\"\">--Select District--</option>\n                    {districts.map((district) => (\n                      <option value={district.district_id}>\n                        {district.district_name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </React.Fragment>\n            ) : (\n              <div class=\"form-group\">\n                <label for=\"email\">Pincode</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={pincode}\n                  onChange={(e) => setPincode(e.target.value)}\n                />\n              </div>\n            )}\n\n            <div class=\"form-group hide\">\n              <label for=\"email\">Date</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n              />\n            </div>\n\n            <button type=\"submit\" class=\"btn btn-success\">\n              Search\n            </button>\n          </form>\n        </div>\n      </div>\n\n      \n      <div className=\"row\">\n        {result ? (\n          <div style={{ marginTop: \"10px\" }}>\n            <div>\n              <span\n                className=\"btn btn-link\"\n                onClick={(e) => handleDateChange(\"prev\")}\n              >\n                {\" \"}\n                Prev\n              </span>\n              <span\n                className=\"btn btn-link pull-right\"\n                onClick={(e) => handleDateChange(\"next\")}\n              >\n                Next{\" \"}\n              </span>\n            </div>\n\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th></th>\n                  {[...Array(7)].map((e, i) => (\n                    <th key={i}>{addDay(i)}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {centers.map((center) => (\n                  <tr id={center.center_id}>\n                    <td style={{ width: \"100px\" }}>\n                      <b>\n                        {center.name} &nbsp;\n                        {center.fee_type === \"Free\" ? null : (\n                          <span class=\"label label-primary\">PAID</span>\n                        )}\n                      </b>\n                      <br />\n                      {center.address},{center.block_name},\n                      {center.district_name},{center.state_name} -{\" \"}\n                      {center.pincode}\n                    </td>\n                    {[...Array(7)].map((e, i) => {\n                      let obj = _.findWhere(center.sessions, {\n                        date: moment(date).add(i, \"days\").format(\"DD-MM-YYYY\"),\n                      });\n                      if (!obj) {\n                        return (\n                          <td key={\"session\" + i}>\n                            <span className=\"badge\">NA</span>\n                          </td>\n                        );\n                      }\n                      return (\n                        <td key={i + \"session\"}>\n                          {obj.available_capacity == 0 ? (\n                            <span className=\"label label-danger\">Booked</span>\n                          ) : (\n                            <span className=\"label label-success\">\n                              {obj.available_capacity}\n                            </span>\n                          )}\n                          <br />\n                          <span style={{ colorName: \"red\" }}>\n                            Age : {obj.min_age_limit}+\n                          </span>\n                          <br />\n                          <span style={{ colorName: \"darkgrey\" }}>\n                            {obj.vaccine === \"COVISHIELD\" ? (\n                              <span style={{ color: \"blue\" }}>\n                                {obj.vaccine}\n                              </span>\n                            ) : (\n                              <span style={{ color: \"blueviolet\" }}>\n                                {obj.vaccine}\n                              </span>\n                            )}\n                          </span>\n                        </td>\n                      );\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            {result && !centers.length ? (\n              <center>\n                <b>No Vaccination Center Available </b>\n              </center>\n            ) : null}\n          </div>\n        ) : null}{\" \"}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <div className=\"container\" style={{ marginTop: \"30px\" }}>\n      <App />\n    </div>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}